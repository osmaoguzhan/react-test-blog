{"version":3,"sources":["pages/HomePage.js","pages/AboutPage.js","pages/article-content.js","component/ArticlesList.js","pages/ArticlesListPage.js","pages/NotFoundPage.js","component/CommentsList.js","component/UpvoteSection.js","component/AddCommentForm.js","pages/ArticlePage.js","Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["HomePage","AboutPage","articles","name","title","content","ArticlesList","className","style","width","this","props","map","article","key","to","substring","Component","ArticlesListPage","ArticleContent","NotFoundPage","CommentsList","comments","comment","username","text","UpvoteSection","articleName","upvotes","setArticleInfo","upvoteArticle","a","fetch","method","result","json","body","onClick","AddCommentForm","useState","setUsername","commentText","setCommentText","addComment","JSON","stringify","headers","type","value","onChange","event","target","rows","cols","ArticlePage","match","params","find","otherArticles","filter","articleInfo","useEffect","fetchData","paragraph","Navbar","id","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b2e32d05.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst HomePage = () => (\r\n    <>\r\n    <h1>Hello, welcome to my blog!</h1>\r\n    <p>This is a page!</p>\r\n    </>\r\n);\r\nexport default HomePage;","import React from 'react'\r\n\r\nconst AboutPage = () => (\r\n    <>\r\n    <h1>About Me</h1>\r\n    <p>This is a page!</p>\r\n    </>\r\n);\r\nexport default AboutPage;","const articles = [\r\n    {\r\n        name: 'learn-react',\r\n        title: 'The Fastest Way to Learn React',\r\n        content: [\r\n            'Welcome!'\r\n        ]\r\n    },\r\n    {\r\n        name: 'learn-react-js',\r\n        title: 'The Fastest Way to Learn React JS',\r\n        content: [\r\n            'Welcome React JS!'\r\n        ]\r\n    },\r\n    {\r\n        name: 'learn-react-from-the-beginning',\r\n        title: 'The Fastest Way to Learn React from the beginning',\r\n        content: [\r\n            'Welcome React from the beginning!'\r\n        ]\r\n    },\r\n];\r\n\r\nexport default articles;","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass ArticlesList extends Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"container\">\r\n                    <div className=\"card\" style={{ width: 1000 }}>\r\n                        <div className=\"card-body\">\r\n                            {this.props.articles.map((article, key) => (\r\n                                <Link key={key} to={`/article/${article.name}`}>\r\n                                    <h3 key={key} className=\"card-title\">{article.title}</h3>\r\n                                    <p className=\"card-text\">{article.content[0].substring(0, 100)}</p>\r\n                                </Link>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ArticlesList;","import React from 'react'\r\nimport ArticleContent from './article-content';\r\nimport ArticlesList from '../component/ArticlesList';\r\n\r\nconst ArticlesListPage = () => (\r\n    <>\r\n        <h1>Articles List</h1>\r\n        <ArticlesList articles={ArticleContent} />\r\n    </> \r\n);\r\nexport default ArticlesListPage;","import React, { Component } from 'react'\r\n\r\nexport default class NotFoundPage extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>404 Not Found!</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nclass CommentsList extends Component {\r\n    render() {\r\n        return (\r\n            <>\r\n            <h3>Comments:</h3>\r\n            {this.props.comments.map((comment, key) => (\r\n                <div className=\"comment\" key={key}>\r\n                    <h4 key={key } >{comment.username}</h4>\r\n                    <p>{comment.text}</p>\r\n                </div>\r\n            ))}\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default CommentsList;","import React from 'react'\r\n\r\nconst UpvoteSection = ({articleName, upvotes, setArticleInfo}) => {\r\n\r\n    const upvoteArticle = async () => {\r\n        const result = await fetch(`/api/articles/${articleName}/upvote`, {\r\n            method: 'post',\r\n        });\r\n        const body = await result.json();\r\n        setArticleInfo(body);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <button onClick={() => upvoteArticle()}>Add Upvote</button>\r\n            <p>This post has been upvoted {upvotes} times.</p>\r\n        </>\r\n    );\r\n}\r\nexport default UpvoteSection;","import React, {useState} from 'react';\r\n\r\nconst AddCommentForm = ({articleName, setArticleInfo}) => {\r\n    \r\n    const [username, setUsername] = useState('');\r\n    const [commentText, setCommentText] = useState('');\r\n    const addComment = async () => {\r\n        const result = await fetch(`/api/articles/${articleName}/add-comment`, {\r\n            method: 'post',\r\n            body: JSON.stringify({username, text: commentText}),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        });\r\n        const body = await result.json();\r\n        setArticleInfo(body);\r\n        setUsername('');\r\n        setCommentText('');\r\n    }\r\n    return(\r\n    <div>\r\n        <h3>Add Comment</h3>\r\n        <label>\r\n            Name: <input type=\"text\" value={username} onChange={(event) => setUsername(event.target.value)}/>\r\n        </label>\r\n    <label>\r\n        Comment:  <textarea rows=\"4\" cols=\"50\" value={commentText} onChange={(event) => setCommentText(event.target.value)}/>\r\n    </label>\r\n   \r\n    <button className=\"success\" onClick={() => addComment()}>Add Comment</button>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default AddCommentForm;","import React, { useState, useEffect } from 'react'\r\nimport ArticleContent from './article-content';\r\nimport ArticlesList from '../component/ArticlesList';\r\nimport NotFoundPage from './NotFoundPage';\r\nimport CommentsList from '../component/CommentsList';\r\nimport UpvoteSection from '../component/UpvoteSection';\r\nimport AddCommentForm from '../component/AddCommentForm';\r\nconst ArticlePage = ({ match }) => {\r\n\r\n    const name = match.params.name;\r\n    const article = ArticleContent.find(article => article.name === name);\r\n    const otherArticles = ArticleContent.filter(article => article.name !== name);\r\n    const [articleInfo, setArticleInfo] = useState({\r\n        upvotes: 0,\r\n        comments: []\r\n    });\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const result = await fetch(`/api/articles/${name}`);\r\n            const body = await result.json();\r\n            setArticleInfo(body);\r\n        }\r\n        fetchData();\r\n    }, [name]);\r\n\r\n    if (!article) return <NotFoundPage />\r\n    else\r\n        return (\r\n            <>\r\n                <div className=\"container\">\r\n                    <h1>{article.title}</h1>\r\n                    <UpvoteSection articleName={name} upvotes={articleInfo.upvotes} setArticleInfo={setArticleInfo} />\r\n                    {article.content.map((paragraph, key) => (\r\n                        <p key={key}>{paragraph}</p>\r\n                    ))}\r\n                    <CommentsList comments={articleInfo.comments} />\r\n                    <AddCommentForm articleName={name} setArticleInfo={setArticleInfo} />\r\n                    <h3>Other Articles</h3>\r\n                    <ArticlesList articles={otherArticles} />\r\n                </div>\r\n            </>\r\n        );\r\n}\r\nexport default ArticlePage;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Navbar = () => (\r\n    <div className=\"container\">\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarText\">\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    <li className=\"nav-item active\">\r\n                        <Link className=\"nav-link\" to=\"/\">Home</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/articles-list\">Articles</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/article\">Article</Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    </div>\r\n\r\n);\r\n\r\nexport default Navbar;","import HomePage from './pages/HomePage';\nimport AboutPage from './pages/AboutPage';\nimport ArticlesListPage from './pages/ArticlesListPage';\nimport ArticlePage from './pages/ArticlePage';\nimport NotFoundPage from './pages/NotFoundPage';\nimport Navbar from './Navbar';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch\n} from 'react-router-dom';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Router>\n    <div className=\"App\">\n      <Navbar />\n      <Switch>\n      <Route path=\"/\" component={HomePage} exact/>\n      <Route path=\"/about\" component={AboutPage} exact/>\n      <Route path=\"/articles-list\" component={ArticlesListPage} exact/>\n      <Route path=\"/article/:name\" component={ArticlePage} exact/>\n      <Route component={NotFoundPage} />\n      </Switch>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'whatwg-fetch';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}